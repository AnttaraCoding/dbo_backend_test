{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "My API",
      "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
    },
    "host": "localhost:9003",
    "basePath": "/",
    "tags": [
      {
        "name": "Authorization",
        "description": "Endpoints"
      },
      {
        "name": "Customer",
        "description": "Endpoints"
      },
      {
        "name": "Order",
        "description": "Endpoints"
      }
    ],
    "schemes": [
      "http",
      "https"
    ],
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
            
      "/api/v1/auth/login": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "description": "Endpoint to sign in a specific user",
          "parameters": [
            {
              "name": "obj",
              "in": "body",
              "description": "Login Authorization",
              "required": true,
              "schema": {
                "$ref": "#/definitions/loginUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User login successfully.",
              "schema": {
                "$ref": "#/definitions/LoginOK"
              }
            },
            "401": {
              "description": "Invalid login credentials"
            }
          }
        }
      },
      "/api/v1/auth/registration": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "description": "Endpoint to register a user.",
          "parameters": [
            {
              "name": "obj",
              "in": "body",
              "description": "Register Authorization",
              "required": true,
              "schema": {
                "$ref": "#/definitions/registerUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User registered successfully.",
              "schema": {
                "$ref": "#/definitions/registerok"
              }
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },

      "/api/v1/customer/create": {
        "post": {
          "tags": [
            "Customer"
          ],
          "description": "Endpoint to create a customer.",
          "parameters": [
            {
              "name": "obj",
              "in": "body",
              "description": "Register Customer",
              "required": true,
              "schema": {
                "$ref": "#/definitions/registerUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List data customer with pagination.",
              "schema": {
                "$ref": "#/definitions/createSuccess"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/customer?page={page}&limit={limit}": {
        "get": {
          "tags": [
            "Customer"
          ],
          "security": {
            "Bearer": []
          },
          "description": "Endpoint to get a specific user.",
          "parameters": [
            {
              "name": "page",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "limit",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "User registered successfully.",
              "schema": {
                "$ref": "#/definitions/pagination"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/customer/detail/{custid}": {
        "get": {
          "tags": [
            "Customer"
          ],
          "security": {
            "Bearer": []
          },
          "description": "Endpoint to get a specific user.",
          "parameters": [
            {
              "name": "custid",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "User registered successfully.",
              "schema": {
                "$ref": "#/definitions/detailCust"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/customer/change/{custid}": {
        "put": {
          "tags": [
            "Customer"
          ],
          "description": "Endpoint to create a customer.",
          "parameters": [
            {
              "name": "custid",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "obj",
              "in": "body",
              "description": "Register Customer",
              "required": true,
              "schema": {
                "$ref": "#/definitions/registerUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List data customer with pagination.",
              "schema": {
                "$ref": "#/definitions/createSuccess"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/customer/delete/{custid}": {
        "delete": {
          "tags": [
            "Customer"
          ],
          "security": {
            "Bearer": []
          },
          "description": "Endpoint to delete user.",
          "parameters": [
            {
              "name": "custid",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "User registered successfully.",
              "schema": {
                "$ref": "#/definitions/detailCust"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },
      
      "/api/v1/order/create": {
        "post": {
          "tags": [
            "Order"
          ],
          "description": "Endpoint to create a order.",
          "parameters": [
            {
              "name": "obj",
              "in": "body",
              "description": "Register order",
              "required": true,
              "schema": {
                "$ref": "#/definitions/registerUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List data order with pagination.",
              "schema": {
                "$ref": "#/definitions/createSuccess"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/order?page={page}&limit={limit}": {
        "get": {
          "tags": [
            "Order"
          ],
          "security": {
            "Bearer": []
          },
          "description": "Endpoint to get a specific user.",
          "parameters": [
            {
              "name": "page",
              "in": "path",
              "required": true,
              "type": "integer"
            },
            {
              "name": "limit",
              "in": "path",
              "required": true,
              "type": "integer"
            }
          ],
          "responses": {
            "200": {
              "description": "User registered successfully.",
              "schema": {
                "$ref": "#/definitions/pagination"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/order/detail/{custid}": {
        "get": {
          "tags": [
            "Order"
          ],
          "security": {
            "Bearer": []
          },
          "description": "Endpoint to get a specific user.",
          "parameters": [
            {
              "name": "custid",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "User registered successfully.",
              "schema": {
                "$ref": "#/definitions/detailCust"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/order/change/{custid}": {
        "put": {
          "tags": [
            "Order"
          ],
          "description": "Endpoint to create a order.",
          "parameters": [
            {
              "name": "custid",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "obj",
              "in": "body",
              "description": "Register order",
              "required": true,
              "schema": {
                "$ref": "#/definitions/registerUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List data order with pagination.",
              "schema": {
                "$ref": "#/definitions/createSuccess"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      },

      "/api/v1/order/delete/{custid}": {
        "delete": {
          "tags": [
            "Order"
          ],
          "security": {
            "Bearer": []
          },
          "description": "Endpoint to delete order data.",
          "parameters": [
            {
              "name": "custid",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "order was deleted",
              "schema": {
                "$ref": "#/definitions/detailCust"
              }
            },
            "401": {
              "description": "Unauthorized.",
              "schema": {
                "$ref": "#/definitions/accessDenied"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "loginUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "andramanday"
          },
          "password": {
            "type": "passw0rd",
            "example": "P@ssw0rd"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "registerUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "andramanday"
          },
          "password": {
            "type": "string",
            "example": "P@ssw0rd"
          },
          "first_name": {
            "type": "string",
            "example": "andra"
          },
          "last_name": {
            "type": "string",
            "example": "manday"
          },          
          "type" : {
            "type" : "string",
            "enum" : ["SUPERUSER", "MAKER", "CHECKER", "SIGNER"],
            "example": "MAKER"
          },
          "status" : {
            "type" : "integer",
            "example" : 1
          }
        },
        "required": [
          "username",
          "password",
          "first_name",
          "last_name",
          "type",
          "status"
        ]
      },
      "registerSuccess":{
        
      },
      "registerok": {
        "type": "object",
        "properties": {
          "ERR": {
            "type": "integer",
            "nullable": false
          },
          "CODE": {
            "type": "integer",
            "example": 200
          },
          "MSG": {
            "type": "string",
            "example": "register successful"
          },
          "DATA": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoginOK": {
        "type": "object",
        "properties": {
          "ERR": {
            "type": "integer",
            "nullable": false
          },
          "CODE": {
            "type": "integer",
            "example": 200
          },
          "MSG": {
            "type": "string",
            "example": "Login success"
          },
          "DATA": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "example": "andramanday"
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhbmRyYW1hbmRheSIsInBhc3N3b3JkIjoiJDJhJDA4JEZ4TTJQVjlOeVlvNXg5Qjl6SWl1dHVFRWNyMzQ4RW1yZE1EUmtXbzhIdTRsOVJZZUxoTllHIiwiZmlyc3RfbmFtZSI6IkFuZHJhIiwibGFzdF9uYW1lIjoiTWFuZGF5IiwidHlwZSI6IkNIRUNLRVIiLCJzdGF0dXMiOjEsImNyZWF0ZWRfYXQiOiIyMDIyLTAxLTA2VDE4OjAyOjIxLjAwMFoiLCJ1cGRhdGVkX2F0IjoiMjAyMi0wMS0wNlQxODowMjoyMS4wMDBaIiwiaWF0IjoxNjQxNTEzMTYwLCJleHAiOjE2NDE1OTk1NjB9.aq9BV9qMpE4eVHCqEKEgY9MSz2zNMzOq6FrH16X9p1Y"
              }
            }
          }
        }
      },
      "accessDenied": {
        "type": "object",
        "properties": {
          "ERR": {
            "type": "integer",
            "nullable": true
          },
          "CODE": {
            "type": "integer",
            "example": 401
          },
          "MSG": {
            "type": "string",
            "example": "Access Denied"
          }
        }
      },
      "createSuccess" : {
        "type": "object",
        "properties": {
          "ERR": {
            "type": "integer",
            "nullable": false
          },
          "CODE": {
            "type": "integer",
            "example": 200
          },
          "MSG": {
            "type": "string",
            "example": "create item successful"
          },
          "DATA": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "pagination" : {
        "type": "object",
        "properties": {
          "ERR": {
            "type": "integer",
            "nullable": false
          },
          "CODE": {
            "type": "integer",
            "example": 200
          },
          "MSG": {
            "type": "string",
            "example": "create item successful"
          },
          "DATA": {
            "type": "object",
            "properties" : {
              "prev" : {
                "type" : "object",
                "properties" : {
                  "active" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "url" : {
                    "type" : "string",
                    "example" : "http://localhost:9003/api/v1/customer?page=1&limit=5"
                  }
                }
              },
              "next" : {
                "type" : "object",
                "properties" : {
                  "active" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "url" : {
                    "type" : "string",
                    "example" : "http://localhost:9003/api/v1/customer?page=2&limit=5"
                  }
                }
              },
              "list" : {
                "type" : "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "cust_id": {
                      "type": "string",
                      "example": "00000001"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "Nilla"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "nusa"
                    },
                    "type": {
                      "type": "string",
                      "example": "GOLD"
                    }
                  }
                }
              },
              "total" : {
                "type" : "string",
                "example" : "7"
              },
              "page" : {
                "type" : "string",
                "example" : "1 / 2"
              }
            }
          }
        }
      },
      "detailCust" : {
        "type": "object",
        "properties": {
          "ERR": {
            "type": "integer",
            "nullable": false
          },
          "CODE": {
            "type": "integer",
            "example": 200
          },
          "MSG": {
            "type": "string",
            "example": "detail data"
          },
          "DATA": {
            "type": "object",
            "properties": {
              "cust_id": {
                "type": "string",
                "example": "00000001"
              },
              "first_name": {
                "type": "string",
                "example": "Nilla"
              },
              "last_name": {
                "type": "string",
                "example": "nusa"
              },
              "type": {
                "type": "string",
                "example": "GOLD"
              }
            }
          }
        }
      }
    }
  }